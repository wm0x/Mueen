// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id            String   @id @default(cuid())
  name          String
  email         String   @unique
  phone         String?  @unique
  password_hash String
  createdAt     DateTime @default(now())
  role          String   @default("customer")

  orders        Order[]
}

model OtpToken {
  id      String   @id @default(uuid())
  // 💡 نستخدم email كعنصر رئيسي للبحث
  email   String   @unique 
  token   String
  expires DateTime

  @@index([email]) // يسرّع عملية البحث في الرمز
}

model PasswordResetToken {
  id      String   @id @default(uuid())
  email   String   @unique
  token   String   @unique
  expires DateTime
}


model Order {
  id              String    @id @default(cuid())
  title           String
  description     String?
  status          String    @default("معلق") 
  price           Float?    
  priceDetails    String?   
  rejectionReason String?   
  filesUrls       String[]  
  subject         String[]  
  createdAt       DateTime  @default(now())
  deadline        DateTime? 
  isAdminViewed   Boolean   @default(false) 

  userId          String
  user            User      @relation(fields: [userId], references: [id])
  orderTracking        OrderTracking[]
}

//تجيب كل الأحداث المرتبطة بطلب معين بالـ orderId وترتبها حسب createdAt 
model OrderTracking {
  id        String   @id @default(cuid())
  orderId   String
  order     Order    @relation(fields: [orderId], references: [id])
  
  event     String   
  description String? 
  performedBy String?
  createdAt DateTime @default(now())
}


